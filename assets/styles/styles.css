body {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: #f3f3f3;
    color: #333;
    font-family: Arial, sans-serif;
}

section {
    width: 80%;
    max-width: 80%;
    background: #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    padding: 20px;
    margin: 1rem;
    border-radius: 1rem;
    display: flex;
}

button {
    background-color: rgba(243, 243, 243, 0);
    border: none;
    color: black;
    width: auto;
    height: auto;
    padding: 15px 32px;
    text-align: center;
    display: inline-block;
    font-size: x-large;
    font-family: Arial, sans-serif;
    margin: 0;
    transition-duration: 0.4s;
    cursor: pointer;
}

button:hover {
    background-color: #ddd; /* Adds a hover effect, change the color to suit your style */
    color: black; /* Change text color on hover */
}


footer {
    display: flex;
    flex-direction: row;
    text-align: center;
}

.debug {
    border: 1px solid red;
}

.btn-group {
    display: flex;
}

.btn-group > button {
    border-right: 1px solid lightgray;
}

.btn-group > button:last-child {
    border-right: none;
}

#tab-content {
    flex-grow: 1;
}

.content {
    width: 100%;
}

.profile {
    display: flex;
    justify-content: center;
    align-items: center;
}

.picture-column {
    flex: 1;
}

.picture-column img {
    width: 100%;
    height: auto;
    border-radius: 1rem;
    object-fit: cover;
    filter: drop-shadow(0 0 4px #333333);
}

.namedesc-column {
    flex: 2;
    padding: 1rem 6rem;
}

.namedesc-column .name {
    font-size: 2em;
    margin-bottom: 10px;
}

.namedesc-column .desc {
    font-size: x-large;
    line-height: 1.6;
}

.collapse {
    max-height: 0;
}

/* Define a property */
/*noinspection CssInvalidAtRule*/
@property --angle {
    /*noinspection CssUnknownProperty*/
    syntax: '<angle>'; /* ðŸ‘ˆ type angle*/
    /*noinspection CssUnknownProperty*/
    inherits: true;
    /*noinspection CssUnknownProperty*/
    initial-value: 0deg;
}

/* Set property as angle for animation */
.rainbowcycleborder {
    --angle: 0deg;
    animation: rotate 2s infinite linear paused;
    --gradient: conic-gradient(from var(--angle), red, orange, yellow, green, blue, indigo, violet, red);
    background: linear-gradient(white, white) padding-box, var(--gradient) border-box;
    border: 4px solid transparent;
}

/* Animate the value */
@keyframes rotate {
    to {
        --angle: 360deg;
    }
}

/* Change the play state to running on :hover, etc. */
.rainbowcycleborder:hover {
    animation-play-state: running;
}

.image {
    max-height: 400px;
    border-radius: 1rem;
    object-fit: cover;
    filter: drop-shadow(0 0 4px #333333);
    margin: 1rem;
}

.title {
    text-align: center;
    font-size: xx-large;
}

.block {
    display: flex;
    flex-direction: row;
    align-items: center;
}

.block .description {
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    font-size: x-large;
}

.block-header {
    text-align: center;
}

.image-collection {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
}

.image-collection img {
    border-radius: 1rem;
    margin: 1rem;
    max-height: 200px;
    height: auto;
    object-fit: cover;
    filter: drop-shadow(0 0 4px #333333);
}

.video-collection {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
}

.video-collection video {
    border-radius: 1rem;
    margin: 1rem;
    max-height: 500px;
    max-width: 30%;
    height: auto;
    object-fit: cover;
    filter: drop-shadow(0 0 4px #333333);
}
